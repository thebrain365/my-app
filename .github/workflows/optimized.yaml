name: Optimized Deployment Workflow

on:
   push:
      branches:
         - main

jobs:
   test:
      runs-on: ubuntu-latest

      steps:
         - name: Setup node
           uses: actions/setup-node@v3
           with:
              node-version: "20"

         - name: Checking out the code
           uses: actions/checkout@v4

         - name: Cache modules
           id: cache-npm
           uses: actions/cache@v4
           env:
              cache-name: cache-node-modules
           with:
              path: node_modules
              key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

         - name: Installing the dependencies
           if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
           run: npm install

         - name: Checking formatting
           run: npx prettier -c app

         - name: Running tests
           run: npm test

   cypress-test:
      runs-on: ubuntu-latest

      steps:
         - name: Checkout
           uses: actions/checkout@v4
         - name: Cypress run
           uses: cypress-io/github-action@v6
           with:
              build: npm run build
              start: npm start

   build:
      runs-on: ubuntu-latest
      needs: [test, cypress-test]

      steps:
         - name: Setup node
           uses: actions/setup-node@v3
           with:
              node-version: "20"

         - name: Checking out the code
           uses: actions/checkout@v4

         - name: Cache modules
           id: cache-npm
           uses: actions/cache@v4
           env:
              cache-name: cache-node-modules
           with:
              path: node_modules
              key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

         - name: Installing the dependencies
           if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
           run: npm install

         - name: Building app
           run: npm run build

   publish:
      runs-on: ubuntu-latest
      needs: build

      steps:
         - name: Checking out code
           uses: actions/checkout@v4

         - name: Login to GitHub Container Registry
           uses: docker/login-action@v3
           with:
              registry: ghcr.io
              username: ${{ github.repository_owner }}
              password: ${{ secrets.GHCR_PAT }}

         - name: Build Docker Image
           run: docker build -t ghcr.io/${{ github.repository }}:latest .

         - name: Push Image to GHCR
           run: docker push ghcr.io/${{ github.repository }}:latest
