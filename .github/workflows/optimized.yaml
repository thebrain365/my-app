name: Optimized Deployment Workflow

on:
   push:
      branches:
         - main

jobs:
   test:
      runs-on: ubuntu-latest

      steps:
         - name: Checking out the code
           uses: actions/checkout@v4
         
         - name: Setup node
           uses: actions/setup-node@v3
           with:
            node-version: "20"
         
         - name: Cache modules
           id : cache-npm
           uses: actions/cache@v4
           env:
            cache-name: cache-node-modules
           with:
            path: ~/.npm
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
         
         - name: Installing the dependencies
           if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
           run: npm install

         - name: Running cat
           run: cat package.json
           
         - name: Running tests
           run: npm run test
   
   # build:
   #    runs-on: ubuntu-latest
   #    needs: test

   #    steps:
   #       - name: Checking out the code
   #         uses: actions/checkout@v4
         
   #       - name: Setup node
   #         uses: actions/setup-node@v3
   #         with:
   #          node-version: "20"

   #       - name: Installing the dependencies
   #         run: npm install
 
   #       - name: Building app
   #         run: npm run build
   
   # publish:
   #    runs-on: ubuntu-latest
   #    needs: build

   #    steps:
   #       - name: Checking out code
   #         uses: actions/checkout@v4

   #       - name: Build image
   #         run: docker build . -t ${{ secrets.DOCKER_IMAGE }}
         
   #       - name: Login to Docker
   #         run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
                  
   #       - name: Push image
   #         run: docker push ${{ secrets.DOCKER_IMAGE }}